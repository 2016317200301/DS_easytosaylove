#include<stdio.h>
#define MAX 40
typedef struct
{
    char ch[MAX];
    int len;
}String;
int Length(String s)
{
    int i=0;
    for(i=0;s.ch[i]!='\0';i++)
    {

    }
    return i;
}
int Strinsert(String *s,int pos,String t)
{
    int i;
    if(pos<0||pos>s->len) return 0;
    if(t.len+s->len<=MAX)
    {
        for(i=s->len+t.len-1;i>pos+t.len;i--)
            s->ch[i]=s->ch[i-t.len];
        for(i=0;i<t.len;i++)
            s->ch[i+pos]=t.ch[i];
        s->len=s->len+t.len;
    }
    else if(pos+t.len<=MAX)
    {
        for(i=MAX-1;i>t.len+pos-1;i--)  s->ch[i]=s->ch[i-t.len];
        for(i=0;i<t.len;i++)  s->ch[i+pos]=t.ch[i];
        s->len=MAX;
    }
    else
    {
        for(i=0;i<MAX;i++) s->ch[i+pos]=t.ch[i];
        s->len=MAX;
    }
}
 void Delete(String *s,int pos,int len)
 {
     int i;
     if(pos<0||pos>(s->len-len)) return 0;
     for(i=pos+len;i<s->len;i++)
        s->ch[i-len]=s->ch[i];
     s->len=s->len-len;
 }
 int Compare(String s,String t)
 {
     int i;
     for(i=0;i<s.len&&i<t.len;i++)

    if(s.ch[i]!=t.ch[i]) return(s.ch[i]-t.ch[i]);

     return (s.len-t.len);
 }
 int Index(String s,String t)
 {
     int i,j,start;
     i=j=0;
     start=0;
     if(t.len==0)return 0;
     while(i<s.len&&j<t.len)
     if(s.ch[i]==t.ch[j]){i++;j++;}
     else{

        start++;
        i=start;
        j=0;
     }
     if(j>=t.len)return (start);
     else return (-1);

 }
int main()
{
    int pos;
    String s,t;
    s.ch[11]="abcabcbade";
    t.ch[4]="cab";
    s.len=10;
    t.len=3;
    pos=Index(s,t);
    printf("%d",pos);
}
