#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<malloc.h>
#define M 40
typedef struct
{
    char ch[M];
    int len;
}SString;
void A(SString *s)
{
    s->len=strlen(s->ch);
}
void StrInsert(SString *s,int pos,SString *t) //在串s中下标为pos的字符之前插入串t//
{
    int i;
    if(pos<0||pos>s->len) return(0);
    if(s->len+t->len<=M) //插入后串长<=M//
    {
    for(i=s->len+t->len-1;i>=t->len+pos;i--)
    s->ch[i]=s->ch[i-t->len];
    for(i=0;i<t->len;i++)
    s->ch[i+pos]=t->ch[i];
    s->len=s->len+t->len;
    }
    else if(pos+t->len<=M)
    {
        for(i=M-1;i>t->len+pos-1;i--) s->ch[i]=s->ch[i-t->len];
        for(i=0;i<t->len;i++) s->ch[i+pos]=t->ch[i];
        s->len=M;
    }
    else
    {
        for(i=0;i<M-pos;i++) s->ch[i+pos]=t->ch[i];
        s->len=M;
    }
    printf("插入串t后的主串如下：\n");
    printf("%s",s->ch);
}
void StrDelete(SString *s,int pos,int len) //在串s中删除从下标pos起len个字符//
{
    int i;
    if(pos<0||pos>(s->len-len)) return(0);
    for(i=pos+len;i<s->len;i++)
    s->ch[i-len]=s->ch[i];
    s->len=s->len-len;
    printf("在串s中删除len个字符后主串如下：\n");
    printf("%s",s->ch);
}
int StrCompare(SString s,SString t) //若串s和t相等则返回0；若s>t则返回正数；若s<t则返回负数//
{
    int i;
    for(i=0;i<s.len&&i<t.len;i++)
    if(s.ch[i]!=t.ch[i]) return(s.ch[i]-t.ch[i]);
    return(s.len-t.len);
}
int StrIndex(SString s,int pos,SString t) //求从主串s的下标pos起，串t第一次出现的位置，成功返回位置序号，不成功返回-1//
{
    int i,j,start;
    if(t.len==0) return(0);
    start=pos;
    i=start;
    j=0;
    while(i<s.len&&j<t.len)
    if(s.ch[i]==t.ch[j]) {i++;j++;}
    else
    {
        start++;
        i=start;
        j=0;
    }
    if(j>=t.len) return(start);
    else return(-1);
}
main()
{
    SString x,y;
    int e,m,n;
    printf("字符串初始化如下：\n");
    scanf("%s",x.ch);
    A(&x);
    printf("字符串基本练习操作\n");
    printf("***********************\n");
    printf("    1   串插入\n");
    printf("    2   子串删除\n");
    printf("    3   串比较\n");
    printf("    4   查找子串\n");
    printf("    5   退出\n");
    printf("**********************\n");
    printf("请选择操作类型：");
    scanf("%d",&e);
    switch(e)
    {
        case 1:
        printf("插入串是：");
        scanf("%s",y.ch);
        A(&y);
        printf("请确定插入的位置：");
        scanf("%d",&m);
        StrInsert(&x,m,&y);
        break;
        case 2:
        printf("请输入删除字符的起始位置：");
        scanf("%d",&m);
        printf("请输入删除的字符的长度：");
        scanf("%d",&n);
        StrDelete(&x,m,n);
        break;
        case 4:
        printf("请输入查找的起始位置：");
        scanf("%d",&m);
        printf("请输入需要查找的串t:");
        scanf("%s",y.ch);
        A(&y);
        n=StrIndex(x,m,y);
        printf("输出串t首次出现的位置：%d",n+1);
        break;
        case 0:
        break;
        default:
        printf("输入有误！");
    }
}
