#include<stdio.h>
#include<malloc.h>
typedef struct List
{
    int data;
    struct List *next;
}List,*L;
void init(L *l)
{
    (*l)=(L)malloc(sizeof(List));
    (*l)->next=NULL;
}
void CreateFromTail(L l)
{
    L p=l;
    L s;
    int flag=1;
    int c;
    scanf("%d",&c);
    while(flag)
    {
        if(c!=-1)
        {
            s=(L)malloc(sizeof(List));
            s->data=c;
            p->next=s;
            p=s;
            scanf("%d",&c);

        }
        else{
            flag=0;
            p->next=NULL;
        }
    }
}
void Ins(L l1,L l2)
{
    L p=l1;
    L pr=l1->next;
    L q=l2;
    L qr=l2->next;
    while(pr!=NULL&&qr!=NULL)
    {
        if(qr->data<pr->data)
        {
            q->next=qr->next;
            p->next=qr;
            qr->next=pr;
            p=p->next;
            qr=q->next;
        }
        else
        {
            p=p->next;
            pr=pr->next;
        }
    }
    if(pr==NULL&&qr!=NULL)
    {
        p->next=qr;
    }
    p=l1;
    pr=l1->next;
    l2->next=NULL;
    q=l2->next;
    while(pr!=NULL)
    {
        p->next=pr->next;
        l2->next=pr;
        pr->next=q;
        q=pr;
        pr=p->next;
    }

}

void show(L l)
{
    L p=l->next;
    while(p!=NULL)
        {
            printf("%d ",p->data);
            p=p->next;
        }
    printf("\n");
}
int main()
{
    L l1;
    L l2;
    init(&l1);
    init(&l2);
    CreateFromTail(l1);
    CreateFromTail(l2);
    Ins(l1,l2);
    show(l2);
}
